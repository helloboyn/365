class Solution {
public:
int maxProfit(vector<int>& prices) {
    if (prices.empty()) return 0;
    int n = prices.size();
    
    // maxBuys[i] means the max money left with one stock in hand at i-th day.
    vector<long long> maxBuys(n);
    // maxSells[i] means the max money left without any stock in hand at i-th day.
    vector<long long> maxSells(n);
    
    long long buy, sell;
    for (int i=0; i<n; ++i) {
        buy = -prices[i] + (i>=2 ? maxSells[i-2] : 0);
        maxBuys[i] = (i==0 ? buy : max(maxBuys[i-1], buy));
        
        sell = (i==0)?0:maxBuys[i-1]+prices[i];
        maxSells[i] = (i==0 ? sell : max(maxSells[i-1], sell));
    }
    return maxSells[n-1];
}
};
